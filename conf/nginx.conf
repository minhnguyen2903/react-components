user  nginx;
worker_processes  auto;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  tcp_nopush      on;
  tcp_nodelay     on;
  keepalive_timeout  65;
  client_max_body_size 10M;
  server_tokens off;

  # gzip for text assets
  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_min_length 1024;

  # limit methods (reduce attack surface)
  map $request_method $limited_method_allowed {
    default 0;
    GET 1;
    HEAD 1;
    POST 1;
  }

  # rate limit (basic) - tune for production
  limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

  server {
    listen 80;
    server_name _;

    # If you're terminating TLS elsewhere, keep only HTTP -> redirect to https externally.
    # Serve static files
    root /usr/share/nginx/html;
    index index.html;

    # deny unexpected methods quickly
    if ($limited_method_allowed = 0) {
      return 405;
    }

    # Basic DoS protection
    limit_req zone=one burst=20 nodelay;

    # Security Headers (OWASP inspired)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header X-XSS-Protection "1; mode=block" always;
    # Content-Security-Policy - minimal example, adjust for your app's inline scripts or externals
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https:; connect-src 'self' https:; img-src 'self' data: https:; style-src 'self' 'unsafe-inline' https:; object-src 'none'; base-uri 'self'; form-action 'self';" always;

    # prevent MIME-based attacks
    types_hash_max_size 2048;

    # Serve index.html for client-side routing
    location / {
      try_files $uri $uri/ /index.html;
      # cache static content aggressively
      expires 1d;
      add_header Cache-Control "public, max-age=86400, immutable";
    }

    # Disable access to hidden files and directories
    location ~ /\.(?!well-known).* {
      deny all;
      return 404;
    }

    # Deny access to config or source files
    location ~* \.(?:env|log|md|json|lock|yml|yaml|toml)$ {
      deny all;
      return 404;
    }

    # small assets caching
    location ~* \.(?:css|js|svg|png|jpg|jpeg|gif|ico|woff2?|ttf|eot)$ {
      try_files $uri =404;
      expires 30d;
      add_header Cache-Control "public, max-age=2592000, immutable";
    }

    # Optional: enable basic health check endpoint
    location = /health {
      access_log off;
      return 200 'OK';
      add_header Content-Type text/plain;
    }
  }
}
